# vi:syntax=nginx
events {
  worker_connections 1024;
}

error_log stderr;

http {
  resolver 127.0.0.11 ipv6=off;
  include generic_conf/setup_logging.conf;

  include generic_conf/lua_path_setup.conf;
  include generic_conf/basic_vts_setup.conf;
  include generic_conf/setup_cache.conf;


  init_by_lua_block {
    loadbalancer = require "loadbalancer"
    loadbalancer.setup_server_list()
  }

  upstream backend {
    server 0.0.0.1;
    balancer_by_lua_block {
      loadbalancer.set_proper_server()
    }
    keepalive 60;
  }

  server {
    listen 8080;
    vhost_traffic_status_filter_by_set_key $different_status different_status::*;
    set_by_lua_block $different_status {return ""}

    location / {
      access_by_lua_block {
        local rand = math.random(0,100)

        if rand < 50 then
          ngx.var.different_status = "less_50"
        elseif rand < 90 then
          ngx.var.different_status = "less_90"
        elseif rand < 95 then
          ngx.var.different_status = "less_95"
        else
          ngx.var.different_status = "more_95"
        end

        loadbalancer.resolve_name_for_upstream()
      }

      proxy_pass http://backend;
      add_header X-Edge LoadBaalancer;
    }

    include generic_conf/basic_vts_location.conf;
  }

}

